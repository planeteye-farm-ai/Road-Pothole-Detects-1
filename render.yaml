# üöÄ Render Deployment Configuration ‚Äî Distress Detection (SAM + Flask-SocketIO)
# ‚úÖ Compatible with your current Flask structure
# ‚úÖ SAM model auto-load from /data/models
# ‚úÖ Persistent disk for checkpoints and uploads
# ‚úÖ Memory-safe tuning for Render PRO/Standard instance

services:
  - type: web
    name: distress-detection-pothole
    env: python
    plan: standard  # 4 GB RAM instance recommended for SAM + Flask

    buildCommand: |
      set -e
      echo "=== üß† Building Flask Distress Detection App ==="
      pip install --upgrade pip
      pip install -r requirements.txt

      MODEL_DIR="/data/models"
      MODEL_PATH="${MODEL_DIR}/sam_vit_b_01ec64.pth"

      echo "üìÅ Checking for SAM model at ${MODEL_PATH} ..."
      mkdir -p "${MODEL_DIR}"

      if [ -f "${MODEL_PATH}" ]; then
        echo "‚úÖ SAM model already exists ‚Äî skipping download."
      else
        echo "‚¨áÔ∏è SAM model missing. Attempting to download from Google Drive..."
        pip install gdown -q
        gdown "https://drive.google.com/uc?id=1ahDEKaYuK52FtbTixhAuNSqdUFq2sZij" -O "${MODEL_PATH}" || echo "‚ö†Ô∏è Model not auto-downloaded, please upload manually."
      fi

      ls -lh "${MODEL_PATH}" || echo "‚ö†Ô∏è SAM model missing after build ‚Äî upload to /data/models manually."

      echo "‚úÖ Build complete."

    startCommand: |
      echo "üöÄ Starting Flask app with Gunicorn + Eventlet"
      gunicorn app:app --worker-class eventlet -w 1 --timeout 120 -b 0.0.0.0:10000


    envVars:
      - key: PYTHON_VERSION
        value: 3.11.9
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true
      - key: DATA_DIR
        value: uploads
      - key: MAX_CONTENT_LENGTH
        value: "16777216"  # 16 MB upload limit
      - key: MODEL_DIR
        value: /data/models
      - key: SAM_CHECKPOINT_PATH
        value: /data/models/sam_vit_b_01ec64.pth
      - key: WEB_CONCURRENCY
        value: 1
      - key: RUNTIME_ENV
        value: render
      - key: ENABLE_MEMORY_LOG
        value: true
      - key: OMP_NUM_THREADS
        value: "1"
      - key: NUMEXPR_MAX_THREADS
        value: "2"
      - key: MALLOC_TRIM_THRESHOLD_
        value: 0
      - key: PYTORCH_NO_CUDA_MEMORY_CACHING
        value: 1
      - key: GUNICORN_CMD_ARGS
        value: "--preload --max-requests 1 --max-requests-jitter 1"

    healthCheckPath: /health
    autoDeploy: true

# üíæ Persistent Disk for SAM model and uploads
disks:
  - name: sam-model-storage
    mountPath: /data/models
    sizeGB: 2  # Adjust if using larger SAM versions or multiple checkpoints
